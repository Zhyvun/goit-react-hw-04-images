// import React, { Component } from 'react';
import { useState, useEffect } from 'react';
import { ToastContainer, toast } from 'react-toastify'; // https://www.npmjs.com/package/react-toastify
import { Modal } from 'components/Modal/Modal';
import { Searchbar } from 'components/Searchbar/Searchbar';
import { Button } from 'components/Button/Button';
import { ImageGallery } from 'components/ImageGallery/ImageGallery';
import { Loader } from 'components/Loader/Loader';
import { getImage } from 'UI/api';
import { toastConfig } from 'UI/toastify';
import 'react-toastify/dist/ReactToastify.css';
import { AppBox, ModalImage } from './App.styled';

export const App = () => {
  const [largeImageURL, setlargeImageURL] = useState('');
  const [searchQuery, setQuery] = useState('');
  const [page, setPage] = useState(1);
  const [loading, setLoading] = useState(false);
  const [images, setImages] = useState([]);
  const [totalImages, setTotalImages] = useState(0);

  useEffect(() => {
    //–∑–∞–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É —Ç–∞ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    if (!searchQuery) return; //–¥—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —à–æ –∑–∞—Ä–∞–∑ —î –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É —Å—Ç–∞–Ω—ñ

    getImage(searchQuery, page) // —à—É–∫–∞—î–º–æ —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
      .then(({ hits: newHits, totalHits }) => {
        if (newHits.length === 0 && newHits.length === totalHits) {
          toast.error(
            '–ù–∞—à–∫—Ä—è–±–∞–π —â–æ—Å—å –ø—É—Ç–Ω—î üôÑ... –±–æ –Ω—ñ—á–æ–≥–æ –ù–ò–ú–ê üò≤',
            toastConfig
          ); //–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—É
          return;
        }
        if (
          newHits.length < 12 ||
          (newHits.length !== 0 && newHits.length < 12)
        ) {
          toast.info('–í—Å–µ! –ú—É–ª—å—Ç—ñ–∫—ñ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å üòâ', toastConfig); // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–æ–≤–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å, —è–∫—â–æ –ø—Ä–∏–π–ª–æ –º–µ–Ω—à–µ 12 - —Ñ—ñ–Ω—ñ—à
        }

        // –í–∏–±–∏—Ä–∞—î–º –∑ –º–∞—Å–∏–≤–∞ –æ–±'—î–∫—Ç–∞ —Ç—ñ–ª—å–∫–∏ —Ç—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ
        const filteredNewHits = newHits.map(
          ({ id, webformatURL, largeImageURL, tags }) => ({
            id,
            webformatURL,
            largeImageURL,
            tags,
          })
        );

        // –í–∏–≤–æ–¥–∏–º–æ –Ω–æ–≤—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏ —â–æ —É –∑–∞–ø–∏—Ç—ñ
        setImages(prevHits => [...prevHits, ...filteredNewHits]);
        setTotalImages(totalHits);
      })
      // –õ–æ–≤–∏–º–æ –ø–æ–º–∏–ª–∫—É
      .catch(error => {
        console.error(error.response);
      })
      .finally(() => setLoading(false));
  }, [searchQuery, page]);

  //–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –ø–æ—à—É–∫—É
  const hendleSearchFormSubmit = searchValue => {
    setQuery(searchValue);
    setPage(1);
    setImages([]);
    setTotalImages(0);
  };

  //—Ñ—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
  const handleLoadMore = () => {
    setPage(prevPage => prevPage + 1);
  };

  // –º–µ—Ç–æ–¥ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è/–∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  const toggleModal = (link = '') => setlargeImageURL(link);

  // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º–∞—Å–∏–≤—É —Å—Ç–æ—Ä—ñ–Ω–æ–∫
  const showLoadMoreBtn = !loading && images.length !== totalImages;

  return (
    <AppBox>
      <Searchbar onSearchSubmit={hendleSearchFormSubmit} />
      {images.length > 0 && (
        <ImageGallery images={images} handleImageClick={toggleModal} />
      )}
      {showLoadMoreBtn && (
        <Button onClick={handleLoadMore} disabled={loading} />
      )}
      {loading && <Loader />}
      {largeImageURL && (
        <Modal onClose={toggleModal}>
          <ModalImage src={largeImageURL} />
        </Modal>
      )}
      <ToastContainer />
    </AppBox>
  );
};

/* CLASS
export class App extends Component {
  state = {
    largeImageURL: '',
    searchQuery: '',
    page: 1,
    hits: [],
    loading: false,
    totalHits: 0,
  };

  //–∑–∞–¥–∞—î–º–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É —Ç–∞ –Ω–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  componentDidUpdate(_, prevState) {
    const { searchQuery, page } = state; //–¥—ñ—Å—Ç–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —à–æ –∑–∞—Ä–∞–∑ —î –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É —Å—Ç–∞–Ω—ñ

    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {
      // if (searchQuery.trim() === '') {
      //   toast.error('–®–û? –ü–†–û–ë–Ü–õ –ó–ê–õ–Ü–ü ? ....–ü–æ—á–∏—Å—Ç—å –∫–ª–∞–≤—É üòú', toastConfig);
      //   return;
      // }
      setState({ loading: true }); // —è–∫—â–æ –Ω–µ –¥–æ—Ä—ñ–≤–Ω—é—î (–∑–º—ñ–Ω–∏–ª–æ—Å—å) –¥–æ–∑–≤–æ–ª—è—î–º–æ –ø–æ—à—É–∫
      getImage(searchQuery, page) // —à—É–∫–∞—î–º–æ —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –Ω–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
        .then(({ hits: newHits, totalHits }) => {
          if (state.searchQuery.trim() === '' || totalHits === 0) {
            toast.error(
              '–ù–∞—à–∫—Ä—è–±–∞–π —â–æ—Å—å –ø—É—Ç–Ω—î üôÑ... –±–æ –Ω—ñ—á–æ–≥–æ –ù–ò–ú–ê üò≤',
              toastConfig
            ); //–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –∑–∞–ø–∏—Ç—É
            return;
          }
          if (
            (prevState.hits.length === 0 && newHits.length === totalHits) ||
            (prevState.hits.length !== 0 && newHits.length < 12)
          ) {
            toast.info('–í—Å–µ! –ú—É–ª—å—Ç—ñ–∫—ñ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å üòâ', toastConfig); // –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–æ–≤–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å, —è–∫—â–æ –ø—Ä–∏–π–ª–æ –º–µ–Ω—à–µ 12 - —Ñ—ñ–Ω—ñ—à
          }
          // –í–∏–±–∏—Ä–∞—î–º –∑ –º–∞—Å–∏–≤–∞ –æ–±'—î–∫—Ç–∞ —Ç—ñ–ª—å–∫–∏ —Ç—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ
          const filteredNewHits = newHits.map(
            ({ id, webformatURL, largeImageURL, tags }) => ({
              id,
              webformatURL,
              largeImageURL,
              tags,
            })
          );

          // –í–∏–≤–æ–¥–∏–º–æ –Ω–æ–≤—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —ñ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏ —â–æ —É –∑–∞–ø–∏—Ç—ñ
          setState(prevState => ({
            hits: [...prevState.hits, ...filteredNewHits],
            totalHits,
          }));
        })

        // –õ–æ–≤–∏–º–æ –ø–æ–º–∏–ª–∫—É
        .catch(error => {
          console.error(error.response);
        })
        .finally(() => {
          setState({ loading: false });
        });
    }
  }

  //–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ –ø–æ—à—É–∫—É
  hendleSearchFormSubmit = searchValue => {
    setState({
      searchQuery: searchValue,
      page: 1,
      hits: [],
      totalHits: 0,
    });
  };

  //—Ñ—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
  handleLoadMore = () => {
    setState(prevState => ({ page: prevState.page + 1 }));
  };

  // –º–µ—Ç–æ–¥ –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è/–∑–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  toggleModal = (largeImageURL = '') => {
    setState({ largeImageURL: largeImageURL });
  };

  render() {
    const { loading, hits, largeImageURL, totalHits } = state;
    const showLoadMoreBtn = !loading && hits.length !== totalHits;

    return (
      <AppBox>
        <Searchbar onSearchSubmit={hendleSearchFormSubmit} />
        {hits.length > 0 && (
          <ImageGallery images={hits} handleImageClick={toggleModal} />
        )}
        {showLoadMoreBtn && (
          <Button onClick={handleLoadMore} disabled={loading} />
        )}
        {loading && <Loader />}
        {largeImageURL && (
          <Modal onClose={toggleModal}>
            <ModalImage src={largeImageURL} />
          </Modal>
        )}
        <ToastContainer />
      </AppBox>
    );
  }
}
*/
